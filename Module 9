class Car:
    def __init__(self, registration_number, maximum_speed, current_speed = 0, travelled_distance = 0):
        self.registration_number = registration_number
        self.maximum_speed = maximum_speed
        self.current_speed = current_speed
        self.travelled_distance = travelled_distance
    def properties(self):
        print(f"The registration number is:{self.registration_number}, the maximum speed is: {self.maximum_speed}, the current speed is: {self.current_speed} and the travelled distance is: {self.travelled_distance}")
c1 = Car("ABC-123", 142 )
c1.properties()


class Car:
    def __init__(self, registration_number, maximum_speed, current_speed= 0 , travelled_distance = 0):
        self.registration_number = registration_number
        self.maximum_speed = maximum_speed
        self.current_speed = current_speed
        self.travelled_distance = travelled_distance

    def properties(self):
        print(f"The registration number is:{self.registration_number}, the maximum speed is: {self.maximum_speed}, the current speed is: {self.current_speed} and the travelled distance is: {self.travelled_distance}")
    def accelerate(self, change_of_speed):
        self.current_speed += change_of_speed
        if self.current_speed > self.maximum_speed:
            self.current_speed = self.maximum_speed
        elif self.current_speed < 0:
            self.current_speed = 0

c2 = Car("ABC_123", 142)
c2.properties()
c2.accelerate(30)
c2.accelerate(70)
c2.accelerate(50)
print(f"Speed of the car after acceleration: {c2.current_speed} km/h")
c2.accelerate(-200)
print(f"Speed of the car after emergency brake: {c2.current_speed} km/h")


class Car:
    def __init__(self, registration_number, maximum_speed, current_speed = 0 , travelled_distance = 2000):
        self.registration_number = registration_number
        self.maximum_speed = maximum_speed
        self.current_speed = current_speed
        self.travelled_distance = travelled_distance

    def properties(self):
        print(f"The registration number is:{self.registration_number}, the maximum speed is: {self.maximum_speed}, the current speed is: {self.current_speed} and the travelled distance is: {self.travelled_distance}")

    def accelerate(self, change_of_speed):
        self.current_speed += change_of_speed
        if self.current_speed > self.maximum_speed:
            self.current_speed = self.maximum_speed
        elif self.current_speed < 0:
            self.current_speed = 0

    def drive(self, number_of_hours):
        self.travelled_distance += self.current_speed*number_of_hours

c3 = Car("ABC_123", 142)
c3.accelerate(30)
c3.accelerate(70)
c3.accelerate(50)
print(f"Speed of the car after acceleration: {c3.current_speed} km/h")
c3.accelerate(-200)
print(f"Speed of the car after emergency brake: {c3.current_speed} km/h")
#I increased the speed of the car to 99 because it is set to 0 after the emergency brea, and it wont have any travelled distance like that.
c3.accelerate(99)
c3.drive(1.5)
print(f"The distance travelled is {c3.travelled_distance} km")
c3.properties()

import random

class Car:
    def __init__(self, registration_number, maximum_speed, current_speed=0, travelled_distance=0):
        self.registration_number = registration_number
        self.maximum_speed = maximum_speed
        self.current_speed = current_speed
        self.travelled_distance = travelled_distance

    def properties(self):
        print(f"The registration number is: {self.registration_number}, "
              f"the maximum speed is: {self.maximum_speed}, "
              f"the current speed is: {self.current_speed} and "
              f"the travelled distance is: {self.travelled_distance}")

    def accelerate(self, change_of_speed):
        self.current_speed += change_of_speed
        if self.current_speed > self.maximum_speed:
            self.current_speed = self.maximum_speed
        elif self.current_speed < 0:
            self.current_speed = 0

    def drive(self, number_of_hours):
        self.travelled_distance += self.current_speed * number_of_hours



cars = []
for i in range(1, 11):
    maximum_speed = random.randint(100, 200)
    registration_number = f"ABC-{i}"
    car = Car(registration_number, maximum_speed)
    cars.append(car)


while True:
    for car in cars:
        car.accelerate(random.randint(-10, 15))
        car.drive(1)
        if car.travelled_distance >= 10000:
            break
    for car in cars:
        if car.travelled_distance >= 10000:
            break
    else:
        continue
    break

print("Reg | Max | Speed | Distance")
for car in cars:
    print(car.registration_number, "|", car.maximum_speed, "|", car.current_speed, "|", round(car.travelled_distance, 2))
#I got some help from AI on the last one, I tried to solve it but i got some errors so i had to ask for some help.



